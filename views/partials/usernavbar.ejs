<nav class="navbar fixed-top navbar-expand-lg bg-dark border-bottom border-body" data-bs-theme="dark">
  <div class="container-fluid">
    <a class="navbar-brand" href="/">YelpCamp</a>
    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup"
      aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
      <div class="navbar-nav ms-auto">
        <a class="nav-link active" aria-current="page" href="/">Home</a>
        <a class="nav-link active" aria-current="page" href="/campgrounds">Campgrounds</a>
        
        <% if(req.session.user){ %>
          <a class="nav-link" href="/Users/Profile/<%=req.session.user.username%>">Profile</a>
          <a class="nav-link" href="/Users/logout">Logout</a>
          <% }else{ %>
            <a class="nav-link" href="/Users/login">Sign in</a>
            <a class="nav-link" href="/Users/Register">Register</a>
            <% } %>
              <% if(req.session.user){ %>
              <div class="d-flex justify-content-center align-items-center">
                <div class="position-relative">

                  <form action='' id="navbarsearch">
                    <input type="text" class="form-control rounded-pill search-bar pe-5" placeholder="Search..."
                      aria-label="Search" name="searchTerm" id="user-search">
                    <button class="btn position-absolute top-50 end-0 translate-middle-y" type="submit">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                        class="bi bi-search" viewBox="0 0 16 16">
                        <path
                          d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                      </svg>
                    </button>
                  </form>
                  <ul id="user-suggestions" class="list-group position-absolute w-100 z-3 mt-1"
                    style="display: none; max-height: 200px; overflow-y: auto;"></ul>

                </div>
              </div>
              <% }%>
      </div>
    </div>
  </div>
</nav>


<script>
  const input = document.querySelector('#user-search');
  const dropdown = document.querySelector('#user-suggestions');
  const navbarform = document.getElementById('navbarsearch');

  // Form submit: prevent default and redirect to profile
  navbarform.addEventListener('submit', (e) => {
    e.preventDefault(); // stop form from refreshing page
    const username = input.value.trim();
    if (username) {
      window.location.href = `/Users/Profile/${encodeURIComponent(username)}`;
    }
  });

  // Live search suggestions with debounce
  input.addEventListener('input', debounce(async () => {
    const query = input.value.trim();
    if (!query) {
      dropdown.style.display = 'none';
      dropdown.innerHTML = '';
      return;
    }

    try {
      const res = await fetch(`/Users/search?searchTerm=${encodeURIComponent(query)}`);
      const users = await res.json();

      if (users.length === 0) {
        dropdown.innerHTML = '<li class="list-group-item">No users found</li>';
      } else {
        dropdown.innerHTML = users.map(u =>
          `<li class="list-group-item" style="cursor:pointer" onclick="window.location='/Users/Profile/${u.username}'">
             ${u.username}
           </li>`).join('');
      }

      dropdown.style.display = 'block';
    } catch (err) {
      console.error('Error fetching user suggestions:', err);
    }
  }, 0)); // 300ms debounce

  // Hide dropdown on outside click
  document.addEventListener('click', (e) => {
    if (!input.contains(e.target) && !dropdown.contains(e.target)) {
      dropdown.style.display = 'none';
    }
  });

  // Debounce utility
  function debounce(fn, delay) {
    let timeout;
    return (...args) => {
      clearTimeout(timeout);
      timeout = setTimeout(() => fn.apply(this, args), delay);
    };
  }
</script>
